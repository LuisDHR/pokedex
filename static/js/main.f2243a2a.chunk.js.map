{"version":3,"sources":["components/Titlebar/Titlebar.js","components/Card/Card.js","components/List/List.js","components/Button/Button.js","services/pokemonService.js","components/Container.js","App.js","index.js"],"names":["Titlebar","className","Card","pokemon","src","sprites","front_default","alt","name","types","map","type","i","List","pokemonList","data","id","Button","props","pages","start","end","getPokemonData","a","axios","get","res","getPokemonList","page","pokemonArray","push","Container","useState","setPage","setPokemonList","loading","setLoading","btnNext","setBtnNext","btnPrevious","setBtnPrevious","useEffect","response","fetchData","siguiente","actual","anterior","onClick","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2243a2a.chunk.js","sourcesContent":["// Componente que muestra el título del proyecto (Pokédex)\r\n// en una barra situada en la parte superior de la página.\r\n\r\nimport './style.css'\r\n\r\nconst Titlebar = () => {\r\n    return (\r\n        <div className=\"main-title\">\r\n            Pokédex\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Titlebar\r\n","// Componente que muestra los datos \r\n// individuales (imagen, nombre, tipo) de un pokémon.\r\n\r\nimport './style.css'\r\n\r\nconst Card = ({ pokemon }) => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-img\">\r\n            <img src={pokemon.sprites.front_default} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-title\">\r\n            {pokemon.name}\r\n        </div>\r\n        <div className=\"card-types\">\r\n            {\r\n                pokemon.types.map( (type, i) => {\r\n                    return (\r\n                        <div key={i} className=\"card-type\">\r\n                            {type.type.name}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Card","// Componente que muestra en un grid 10 tarjetas de pokémon\r\n// dependiendo de la página donde se encuentre el usuario.\r\nimport Card from '../Card/Card'\r\nimport './style.css'\r\n\r\nconst List = ({ pokemonList }) => {\r\n    return (\r\n        <div className=\"grid-container\">\r\n        { \r\n            pokemonList.map( (pokemon) => (\r\n                <Card key={pokemon.data.id} pokemon={pokemon.data} />\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","// Componente estilizado de un botón.\r\n\r\nimport './style.css'\r\n\r\nconst Button = ({...props}) => {\r\n    return (\r\n      <button className=\"button\" {...props}/>\r\n    )\r\n}\r\n\r\nexport default Button","import axios from 'axios'\r\n\r\n// Array para determinar los identificadores de los \r\n// pokémon que se mostrarán en pantalla (dividido en decenas).\r\nconst pages = [\r\n    { start: 1, end: 10 },\r\n    { start: 11, end: 20 },\r\n    { start: 21, end: 30 },\r\n    { start: 31, end: 40 },\r\n    { start: 41, end: 50 },\r\n    { start: 51, end: 60 },\r\n    { start: 61, end: 70 },\r\n    { start: 71, end: 80 },\r\n    { start: 81, end: 90 },\r\n    { start: 91, end: 100 },\r\n    { start: 101, end: 110 },\r\n    { start: 111, end: 120 },\r\n    { start: 121, end: 130 },\r\n    { start: 131, end: 140 },\r\n    { start: 141, end: 150 },\r\n];\r\n\r\n// Función para obtener los datos de un pokémon mediante su id.\r\nexport const getPokemonData = async (id) => {\r\n    const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n    return res\r\n}\r\n\r\n// Función para obtener una lista de 10 pokémon dependiendo del \r\n// numeró de página dado.\r\n// Ejemplo: getPokemonList(10) devolverá una lista con los \r\n// pokémon que tienen identificadores del 1 al 10.\r\nexport const getPokemonList = async (page) => {\r\n    let pokemonArray = []\r\n    for (let i = pages[page].start; i <= pages[page].end; i ++) {\r\n        pokemonArray.push(await getPokemonData(i))\r\n    }\r\n\r\n    return pokemonArray\r\n}\r\n","// Componente que muestra la barra de título, los \r\n// pokémones obtenidos, la página actual y una botonera \r\n// para cambiar ascendente y descendentemente el número de página.\r\nimport { useState, useEffect } from 'react'\r\nimport Titlebar from \"./Titlebar/Titlebar\"\r\nimport List from \"./List/List\"\r\nimport Button from './Button/Button'\r\nimport {getPokemonList} from '../services/pokemonService'\r\n\r\nconst Container = () => {\r\n    // Hooks de estado para almacenar/cambiar la página actual\r\n    // y la lista de pokémones.\r\n    const [page, setPage] = useState(0)\r\n    const [pokemonList, setPokemonList] = useState([])\r\n    // Hook de estado para mostrar/controlar el mensaje de 'Cargando...'.\r\n    const [loading, setLoading] = useState(true)\r\n    // Hooks de estado para controlar el estado de los botones.\r\n    const [btnNext, setBtnNext] = useState(false)\r\n    const [btnPrevious, setBtnPrevious] = useState(true)\r\n\r\n    // Se obtienen los primeros 10 pokémon.\r\n    useEffect( () => {\r\n        async function fetchData() {\r\n            const response = await getPokemonList(page)\r\n            setPokemonList( response )\r\n            setLoading(false)\r\n        }\r\n        fetchData();\r\n    }, [page])\r\n\r\n    // Función para pasar a la siguiente página.\r\n    const siguiente = async () => {\r\n        setBtnNext(true)\r\n        setLoading(true)\r\n        if (page < 14) {\r\n            let actual = page + 1\r\n            setPage(actual)\r\n            setPokemonList( await getPokemonList(actual) )\r\n            \r\n            if (actual < 14) setBtnNext(false)\r\n            if (actual > 0) setBtnPrevious(false)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    // Función para pasar a la página anterior.\r\n    const anterior = async () => {\r\n        setBtnPrevious(true)\r\n        setLoading(true)\r\n        if (page > 0) {\r\n            let actual = page - 1\r\n            setPage(actual)\r\n            setPokemonList( await getPokemonList(actual) )\r\n\r\n            if (actual > 0) setBtnPrevious(false)\r\n            if (actual < 14) setBtnNext(false)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Titlebar />\r\n        <div className=\"pagina\">Página {page + 1}</div>\r\n        <div className=\"btn\">\r\n            <Button onClick={anterior} disabled={btnPrevious} >Anterior</Button>\r\n            <Button onClick={siguiente} disabled={btnNext}>Siguiente</Button>\r\n        </div>\r\n        {   loading\r\n            ? <div className=\"cargando\">Cargando...</div>\r\n            : <List pokemonList={pokemonList} />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Container","import React from 'react'\nimport Container from './components/Container'\n\nfunction App() {\n\n  return (\n    <Container />\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}